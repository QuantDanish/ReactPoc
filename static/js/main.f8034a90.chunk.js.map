{"version":3,"sources":["component/DemoCard/DemoCard.js","component/modal/ModalTemplate.js","component/modal/ModalHeader.js","component/modal/ModalFooter.js","component/modal/ModalBody.js","component/modal/Modal.js","demoComponent/DemoModal.js","component/Loader/Loader.js","demoComponent/DemoLoader.js","App.js","serviceWorker.js","index.js"],"names":["DemoCard","_ref","children","index","title","minWidth","react_default","a","createElement","className","style","width","defaultProps","getModalStyle","styleWithoutMargin","key","hasOwnProperty","match","ModalTemplate","props","show","hideCallback","startAnimation","body","backdropStyle","modalStyle","Object","objectSpread","display","Fragment","onClick","role","borderBottom","padding","ModalHeader","header","customHeader","isCustomHeader","type","data-dismiss","aria-label","aria-hidden","trim","length","ModalFooter","footer","showTopBorder","showCloseButton","buttonText","buttonStyle","borderTop","ModalBody","content","modal_ModalHeader","modal_ModalFooter","Modal","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","animation","value","setState","_this2","setShow","setTimeout","setAnimation","delay","_this3","console","log","nextProps","nextState","isOpen","renderModal","closeModal","modal_ModalBody","closeHandler","modal_ModalTemplate","Component","DemoModal","_useState","useState","_useState2","slicedToArray","open","setOpen","_useState3","_useState4","openLargeModal","setOpenLargeModal","_useState5","_useState6","openBModal","setOpenBModal","modal_Modal","Loader","isLoading","DemoLoader","setIsLoading","component_Loader_Loader","App","component_DemoCard_DemoCard","demoComponent_DemoModal","demoComponent_DemoLoader","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8034a90.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  index: PropTypes.number,\r\n  title: PropTypes.string,\r\n  minWidth: PropTypes.string\r\n}\r\n\r\nconst defaultProps = {\r\n  children: 'Dummy Child',\r\n  title: 'Title',\r\n  index: 0,\r\n  minWidth: '48%'\r\n}\r\n\r\nconst DemoCard = ({children, index, title, minWidth}) => {\r\n  return (\r\n    <div className=\"card p-2 m-2\" style={{width: minWidth}}>\r\n      <div className=\"h4\">\r\n        {index}. {title}\r\n      </div>\r\n      <hr/>\r\n      <div className=\"card-body\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nDemoCard.propTypes = propTypes;\r\nDemoCard.defaultProps = defaultProps;\r\n\r\n\r\nexport default DemoCard;\r\n","import React from 'react';\r\nimport PropTypes  from 'prop-types'; \r\n\r\nimport './modal.css';\r\n\r\nconst propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  hideCallback: PropTypes.func.isRequired,\r\n  startAnimation: PropTypes.bool.isRequired,\r\n  modalStyle: PropTypes.object.isRequired,\r\n  backdropStyle: PropTypes.object.isRequired,\r\n  body: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]).isRequired\r\n};\r\n\r\nconst ModalTemplate = (props) => {\r\n  const {\r\n    show, \r\n    hideCallback, \r\n    startAnimation, \r\n    className,\r\n    body,\r\n    backdropStyle,\r\n    modalStyle,\r\n  } = props;\r\n\r\n\r\n  let style= {...backdropStyle};\r\n  style.display = show ? \"block\" : \"none\";\r\n  \r\n  let styleWithoutMargin = getModalStyle(modalStyle);\r\n  return (\r\n    <>\r\n      <div className={\"modal-backdrop \" + (show ? 'show': '')} style={style} onClick={hideCallback}></div>\r\n      <div className={\"modal \" + (show ? 'show': '')} role=\"dialog\" style={style} >\r\n        <div className={\"modal-dialog \" + className } role=\"document\" >\r\n          <div className={\"modal-content \" + (startAnimation ? \"aniamtionActive\" : \"\")} style={styleWithoutMargin} >\r\n            { body }\r\n          </div>\r\n        </div>     \r\n      </div>   \r\n    </>\r\n  )\r\n}\r\n\r\nconst getModalStyle = style => {\r\n  let styleWithoutMargin = {};\r\n  for (const key in style) {\r\n    if (style.hasOwnProperty(key) && !key.match(/margin/i)) {\r\n      styleWithoutMargin[key] = style[key];\r\n      \r\n    }\r\n  }\r\n  return styleWithoutMargin;\r\n}\r\n\r\nModalTemplate.propTypes = propTypes;\r\n\r\nexport default ModalTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  header: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]),\r\n  hideCallback: PropTypes.func.isRequired\r\n};\r\n\r\nconst defaultProps = {\r\n  header: ''\r\n};\r\n\r\nlet style = {\r\n  borderBottom: 'none',\r\n  padding: '0.5rem'\r\n}\r\n\r\nconst ModalHeader = ({header, hideCallback}) => {\r\n  const customHeader = isCustomHeader(header);\r\n\r\n  return (\r\n    <div className=\"modal-header\" style={customHeader ? style : null}>\r\n      {customHeader ? null : <h5 className=\"modal-title\">{header}</h5>}\r\n      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\" onClick={hideCallback}>&times;</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst isCustomHeader = header => {\r\n  return header.trim().length === 0;\r\n};\r\n\r\n\r\nModalHeader.propTypes = propTypes;\r\nModalHeader.defaultProps = defaultProps;\r\n\r\nexport default ModalHeader\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  footer: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n  ]),\r\n  hideCallback: PropTypes.func,\r\n  showTopBorder: PropTypes.bool,\r\n  showCloseButton: PropTypes.bool,\r\n  buttonText: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n  ]),\r\n  buttonStyle: PropTypes.object\r\n};\r\n\r\nconst defaultProps = {\r\n  footer: null,\r\n  showTopBorder: false,\r\n  showCloseButton: true,\r\n  buttonText: 'Close',\r\n  buttonStyle: null\r\n}\r\n\r\nconst ModalFooter = ({\r\n  footer,\r\n  hideCallback,\r\n  showTopBorder,\r\n  showCloseButton,\r\n  buttonText,\r\n  buttonStyle,\r\n}) => {\r\n\r\n  let style = (showTopBorder ? null : {borderTop: 'none'});\r\n  return (\r\n    <div className=\"modal-footer\" style={style}>\r\n      { (footer !== null )\r\n        ? (<div className=\"flex-fill\">{footer}</div>)\r\n        : null\r\n      }\r\n      { showCloseButton\r\n        ? (<button style={buttonStyle} type=\"button\" className=\"btn btn-primary\" onClick={hideCallback}>{buttonText}\r\n          </button>)\r\n        : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nModalFooter.propTypes = propTypes;\r\nModalFooter.defaultProps = defaultProps;\r\n\r\nexport default ModalFooter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalHeader from './ModalHeader';\r\nimport ModalFooter from './ModalFooter';\r\n\r\nconst propTypes = {\r\n  header: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]),\r\n  content: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]),\r\n  footer: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]),\r\n  hideCallback: PropTypes.func.isRequired,\r\n  showCloseButton: PropTypes.bool,\r\n  showTopBorder: PropTypes.bool,\r\n}\r\n\r\nconst ModalBody = ({\r\n  header, \r\n  hideCallback, \r\n  content, \r\n  footer,\r\n  showCloseButton,\r\n  showTopBorder\r\n}) => {\r\n  return (\r\n        <>\r\n          <ModalHeader header={header} hideCallback={hideCallback} />\r\n          <div className=\"modal-body\">\r\n            {content}\r\n          </div>\r\n          <ModalFooter footer={footer} hideCallback={hideCallback} showCloseButton={showCloseButton}\r\n          showTopBorder={showTopBorder}/>\r\n        </>\r\n  );\r\n}\r\n\r\n\r\nModalBody.propTypes = propTypes;\r\n\r\nexport default ModalBody\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ModalTemplate from './ModalTemplate';\r\nimport ModalBody from './ModalBody';\r\n\r\nlet propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  closeHandler: PropTypes.func.isRequired,\r\n  delay: PropTypes.number,\r\n  className: PropTypes.string,\r\n  modalStyle: PropTypes.object,\r\n  showTopBorder: PropTypes.bool,\r\n  showCloseButton: PropTypes.bool,\r\n  backdropStyle: PropTypes.object,\r\n  header: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]),\r\n  content: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element\r\n  ]),\r\n  footer: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.element\r\n  ])\r\n\r\n\r\n}\r\n\r\nlet defaultProps = {\r\n  isOpen: false,\r\n  delay: 200,\r\n  className: \"\",\r\n  modalStyle: {},\r\n  backdropStyle: {},\r\n  \r\n  showTopBorder: false,\r\n  showCloseButton: false,\r\n}\r\n\r\nclass Modal extends Component {\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n        show: false,\r\n        animation: false\r\n    };\r\n  }\r\n  \r\n  setShow(value){\r\n    this.setState({\r\n      animation: this.state.animation,\r\n      show: value\r\n    });\r\n  }\r\n\r\n  setAnimation(value){\r\n    this.setState({\r\n      animation: value,\r\n      show: this.state.show});\r\n  }\r\n\r\n  renderModal () {\r\n    this.setShow(true);\r\n    setTimeout(() => {\r\n      this.setAnimation(true);\r\n    }, this.props.delay);\r\n  };\r\n  \r\n  closeModal() {\r\n    console.log(\"close  modal ::\", this.state ,this.props)\r\n    this.setAnimation(false);\r\n    setTimeout(() => {\r\n      this.setShow(false);\r\n    }, this.props.delay);\r\n  }\r\n  \r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(!this.props.isOpen && nextProps.isOpen){\r\n      // when user click on button to open a modal.\r\n      this.renderModal();\r\n      return false;\r\n    }    \r\n    else if(this.props.isOpen && !nextProps.isOpen){\r\n      // when use click on close button.\r\n      this.closeModal();\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n    \r\n  }\r\n\r\n  render() {\r\n    const body = this.props.children || <ModalBody \r\n                                header={this.props.header} \r\n                                footer={this.props.footer} \r\n                                content={this.props.content} \r\n                                hideCallback={this.props.closeHandler} \r\n                                showCloseButton={this.props.showCloseButton}\r\n                                showTopBorder={this.props.showTopBorder}/>;\r\n    return (\r\n      <ModalTemplate\r\n        show={this.state.show}\r\n        hideCallback= {this.props.closeHandler}\r\n        startAnimation= {this.state.animation}\r\n        body={body}\r\n        className={this.props.className}\r\n        modalStyle={this.props.modalStyle}\r\n        backdropStyle={this.props.backdropStyle}\r\n      ></ModalTemplate>\r\n    )\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.isOpen) {\r\n      this.renderModal();\r\n    }\r\n  }\r\n}\r\n\r\nModal.propTypes = propTypes;\r\nModal.defaultProps = defaultProps;\r\n\r\nexport default Modal\r\n","import React, {useState} from 'react';\r\nimport Modal from '../component/modal/Modal';\r\n\r\nconst DemoModal = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [openLargeModal, setOpenLargeModal] = useState(false);\r\n  const [openBModal, setOpenBModal] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1 h5\">\r\n        * This is simple modal using bootstrap css.\r\n        Clicking on this button will trigger modal.\r\n\r\n          <button className=\"btn btn-link \" onClick= {() => setOpen(true)}>Show Modal</button>\r\n      </div>\r\n      \r\n      <div className=\"mb-1 h5\">\r\n        * Large modal with <code>modal-lg</code> class. \r\n          <button className=\"btn btn-link\" onClick= {() => setOpenLargeModal(true)}>\r\n            Show Large Modal\r\n          </button>\r\n      </div>\r\n\r\n      <div className=\"mb-1 h5\">\r\n        * bootstrap modal\r\n          <button className=\"btn btn-link\" onClick= {() => setOpenBModal(true)}>\r\n            Show Old Bootstrap Modal.\r\n          </button>\r\n      </div>\r\n\r\n\r\n      <Modal \r\n        isOpen={open} \r\n        closeHandler={() => setOpen(false)} \r\n        content=\"Hey how are  you guys !!\"\r\n      />\r\n\r\n       \r\n      <Modal \r\n        className=\"modal-lg\"\r\n        isOpen={openLargeModal} \r\n        closeHandler={() => setOpenLargeModal(false)} \r\n        content=\"Hey how are  you guys !!\"\r\n      />\r\n\r\n      \r\n      <Modal \r\n        header=\"Modal Header\"\r\n        isOpen={openBModal} \r\n        closeHandler={() => setOpenBModal(false)} \r\n        content=\"This is bootstrap style\"\r\n        footer=\"Modal footer\"\r\n        showTopBorder={true}\r\n        showCloseButton={true}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DemoModal;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Loader = ({isLoading, children, className}) => {\r\n  const content = \r\n              isLoading ? \r\n              ( <div className={className}>\r\n                  <span className='sr-only'>Loading..</span>\r\n                </div> \r\n              ):\r\n              children;\r\n  return content;\r\n};\r\n\r\nLoader.propTypes = {\r\n  children: PropTypes.element,\r\n  className: PropTypes.string,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  delay: PropTypes.number\r\n}\r\n\r\nLoader.defaultProps = {\r\n  className: 'spinner-border',\r\n  delay: 100\r\n}\r\n\r\nexport default Loader;\r\n","import React, {useState} from 'react';\r\nimport Loader from '../component/Loader/Loader';\r\n\r\nconst DemoLoader = () => {\r\n  // creating state.\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  return (\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button \r\n          onClick={() => setIsLoading(true)}\r\n          className={\"btn btn-outline-primary mx-3 \" + (isLoading ? 'disabled' : '')}\r\n            >\r\n            Start \r\n        </button>\r\n        <Loader isLoading={isLoading}>\r\n          <div className=\"h4\">Loading finished.</div>\r\n        </Loader>\r\n        <button \r\n          onClick={() => setIsLoading(false)}\r\n          className={\"btn btn-outline-primary mx-3 \" + (!isLoading ? 'disabled' : '')}>\r\n            Finish \r\n        </button>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default DemoLoader;\r\n","import React from 'react';\r\nimport DemoCard from './component/DemoCard/DemoCard';\r\nimport DemoModal from './demoComponent/DemoModal';\r\nimport DemoLoader from './demoComponent/DemoLoader';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n      <div className=\"d-flex justify-content-around\">\r\n        <div className=\"h1\">React Components</div>\r\n      </div>\r\n      <hr/>\r\n      <div className=\"d-flex flex-wrap justify-content-between\">\r\n        <DemoCard index={1} title=\"Modal\">\r\n          <DemoModal/>\r\n        </DemoCard>\r\n        <DemoCard index={2} title=\"Loader\">\r\n          <DemoLoader />\r\n        </DemoCard>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}